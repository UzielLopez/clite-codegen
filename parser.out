Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ID

Grammar

Rule 0     S' -> Relation
Rule 1     Relation -> Addition
Rule 2     Relation -> Addition RelOp Addition
Rule 3     Addition -> Term
Rule 4     Addition -> Addition AddOp Term
Rule 5     Term -> Factor
Rule 6     Term -> Term MulOp Factor
Rule 7     AddOp -> +
Rule 8     AddOp -> -
Rule 9     MulOp -> *
Rule 10    MulOp -> /
Rule 11    MulOp -> %
Rule 12    RelOp -> <
Rule 13    RelOp -> LE
Rule 14    RelOp -> >
Rule 15    RelOp -> GE
Rule 16    UnaryOp -> +
Rule 17    UnaryOp -> -
Rule 18    Factor -> UnaryOp Primary
Rule 19    Factor -> Primary
Rule 20    Primary -> INTLIT
Rule 21    Primary -> ( Relation )

Terminals, with rules where they appear

%                    : 11
(                    : 21
)                    : 21
*                    : 9
+                    : 7 16
-                    : 8 17
/                    : 10
<                    : 12
>                    : 14
GE                   : 15
ID                   : 
INTLIT               : 20
LE                   : 13
error                : 

Nonterminals, with rules where they appear

AddOp                : 4
Addition             : 1 2 2 4
Factor               : 5 6
MulOp                : 6
Primary              : 18 19
RelOp                : 2
Relation             : 21 0
Term                 : 3 4 6
UnaryOp              : 18

Parsing method: LALR

state 0

    (0) S' -> . Relation
    (1) Relation -> . Addition
    (2) Relation -> . Addition RelOp Addition
    (3) Addition -> . Term
    (4) Addition -> . Addition AddOp Term
    (5) Term -> . Factor
    (6) Term -> . Term MulOp Factor
    (18) Factor -> . UnaryOp Primary
    (19) Factor -> . Primary
    (16) UnaryOp -> . +
    (17) UnaryOp -> . -
    (20) Primary -> . INTLIT
    (21) Primary -> . ( Relation )

    +               shift and go to state 7
    -               shift and go to state 8
    INTLIT          shift and go to state 9
    (               shift and go to state 10

    Relation                       shift and go to state 1
    Addition                       shift and go to state 2
    Term                           shift and go to state 3
    Factor                         shift and go to state 4
    UnaryOp                        shift and go to state 5
    Primary                        shift and go to state 6

state 1

    (0) S' -> Relation .



state 2

    (1) Relation -> Addition .
    (2) Relation -> Addition . RelOp Addition
    (4) Addition -> Addition . AddOp Term
    (12) RelOp -> . <
    (13) RelOp -> . LE
    (14) RelOp -> . >
    (15) RelOp -> . GE
    (7) AddOp -> . +
    (8) AddOp -> . -

    $end            reduce using rule 1 (Relation -> Addition .)
    )               reduce using rule 1 (Relation -> Addition .)
    <               shift and go to state 13
    LE              shift and go to state 14
    >               shift and go to state 15
    GE              shift and go to state 16
    +               shift and go to state 17
    -               shift and go to state 18

    RelOp                          shift and go to state 11
    AddOp                          shift and go to state 12

state 3

    (3) Addition -> Term .
    (6) Term -> Term . MulOp Factor
    (9) MulOp -> . *
    (10) MulOp -> . /
    (11) MulOp -> . %

    <               reduce using rule 3 (Addition -> Term .)
    LE              reduce using rule 3 (Addition -> Term .)
    >               reduce using rule 3 (Addition -> Term .)
    GE              reduce using rule 3 (Addition -> Term .)
    +               reduce using rule 3 (Addition -> Term .)
    -               reduce using rule 3 (Addition -> Term .)
    $end            reduce using rule 3 (Addition -> Term .)
    )               reduce using rule 3 (Addition -> Term .)
    *               shift and go to state 20
    /               shift and go to state 21
    %               shift and go to state 22

    MulOp                          shift and go to state 19

state 4

    (5) Term -> Factor .

    *               reduce using rule 5 (Term -> Factor .)
    /               reduce using rule 5 (Term -> Factor .)
    %               reduce using rule 5 (Term -> Factor .)
    <               reduce using rule 5 (Term -> Factor .)
    LE              reduce using rule 5 (Term -> Factor .)
    >               reduce using rule 5 (Term -> Factor .)
    GE              reduce using rule 5 (Term -> Factor .)
    +               reduce using rule 5 (Term -> Factor .)
    -               reduce using rule 5 (Term -> Factor .)
    $end            reduce using rule 5 (Term -> Factor .)
    )               reduce using rule 5 (Term -> Factor .)


state 5

    (18) Factor -> UnaryOp . Primary
    (20) Primary -> . INTLIT
    (21) Primary -> . ( Relation )

    INTLIT          shift and go to state 9
    (               shift and go to state 10

    Primary                        shift and go to state 23

state 6

    (19) Factor -> Primary .

    *               reduce using rule 19 (Factor -> Primary .)
    /               reduce using rule 19 (Factor -> Primary .)
    %               reduce using rule 19 (Factor -> Primary .)
    <               reduce using rule 19 (Factor -> Primary .)
    LE              reduce using rule 19 (Factor -> Primary .)
    >               reduce using rule 19 (Factor -> Primary .)
    GE              reduce using rule 19 (Factor -> Primary .)
    +               reduce using rule 19 (Factor -> Primary .)
    -               reduce using rule 19 (Factor -> Primary .)
    $end            reduce using rule 19 (Factor -> Primary .)
    )               reduce using rule 19 (Factor -> Primary .)


state 7

    (16) UnaryOp -> + .

    INTLIT          reduce using rule 16 (UnaryOp -> + .)
    (               reduce using rule 16 (UnaryOp -> + .)


state 8

    (17) UnaryOp -> - .

    INTLIT          reduce using rule 17 (UnaryOp -> - .)
    (               reduce using rule 17 (UnaryOp -> - .)


state 9

    (20) Primary -> INTLIT .

    *               reduce using rule 20 (Primary -> INTLIT .)
    /               reduce using rule 20 (Primary -> INTLIT .)
    %               reduce using rule 20 (Primary -> INTLIT .)
    <               reduce using rule 20 (Primary -> INTLIT .)
    LE              reduce using rule 20 (Primary -> INTLIT .)
    >               reduce using rule 20 (Primary -> INTLIT .)
    GE              reduce using rule 20 (Primary -> INTLIT .)
    +               reduce using rule 20 (Primary -> INTLIT .)
    -               reduce using rule 20 (Primary -> INTLIT .)
    $end            reduce using rule 20 (Primary -> INTLIT .)
    )               reduce using rule 20 (Primary -> INTLIT .)


state 10

    (21) Primary -> ( . Relation )
    (1) Relation -> . Addition
    (2) Relation -> . Addition RelOp Addition
    (3) Addition -> . Term
    (4) Addition -> . Addition AddOp Term
    (5) Term -> . Factor
    (6) Term -> . Term MulOp Factor
    (18) Factor -> . UnaryOp Primary
    (19) Factor -> . Primary
    (16) UnaryOp -> . +
    (17) UnaryOp -> . -
    (20) Primary -> . INTLIT
    (21) Primary -> . ( Relation )

    +               shift and go to state 7
    -               shift and go to state 8
    INTLIT          shift and go to state 9
    (               shift and go to state 10

    Relation                       shift and go to state 24
    Addition                       shift and go to state 2
    Term                           shift and go to state 3
    Factor                         shift and go to state 4
    UnaryOp                        shift and go to state 5
    Primary                        shift and go to state 6

state 11

    (2) Relation -> Addition RelOp . Addition
    (3) Addition -> . Term
    (4) Addition -> . Addition AddOp Term
    (5) Term -> . Factor
    (6) Term -> . Term MulOp Factor
    (18) Factor -> . UnaryOp Primary
    (19) Factor -> . Primary
    (16) UnaryOp -> . +
    (17) UnaryOp -> . -
    (20) Primary -> . INTLIT
    (21) Primary -> . ( Relation )

    +               shift and go to state 7
    -               shift and go to state 8
    INTLIT          shift and go to state 9
    (               shift and go to state 10

    Addition                       shift and go to state 25
    Term                           shift and go to state 3
    Factor                         shift and go to state 4
    UnaryOp                        shift and go to state 5
    Primary                        shift and go to state 6

state 12

    (4) Addition -> Addition AddOp . Term
    (5) Term -> . Factor
    (6) Term -> . Term MulOp Factor
    (18) Factor -> . UnaryOp Primary
    (19) Factor -> . Primary
    (16) UnaryOp -> . +
    (17) UnaryOp -> . -
    (20) Primary -> . INTLIT
    (21) Primary -> . ( Relation )

    +               shift and go to state 7
    -               shift and go to state 8
    INTLIT          shift and go to state 9
    (               shift and go to state 10

    Term                           shift and go to state 26
    Factor                         shift and go to state 4
    UnaryOp                        shift and go to state 5
    Primary                        shift and go to state 6

state 13

    (12) RelOp -> < .

    +               reduce using rule 12 (RelOp -> < .)
    -               reduce using rule 12 (RelOp -> < .)
    INTLIT          reduce using rule 12 (RelOp -> < .)
    (               reduce using rule 12 (RelOp -> < .)


state 14

    (13) RelOp -> LE .

    +               reduce using rule 13 (RelOp -> LE .)
    -               reduce using rule 13 (RelOp -> LE .)
    INTLIT          reduce using rule 13 (RelOp -> LE .)
    (               reduce using rule 13 (RelOp -> LE .)


state 15

    (14) RelOp -> > .

    +               reduce using rule 14 (RelOp -> > .)
    -               reduce using rule 14 (RelOp -> > .)
    INTLIT          reduce using rule 14 (RelOp -> > .)
    (               reduce using rule 14 (RelOp -> > .)


state 16

    (15) RelOp -> GE .

    +               reduce using rule 15 (RelOp -> GE .)
    -               reduce using rule 15 (RelOp -> GE .)
    INTLIT          reduce using rule 15 (RelOp -> GE .)
    (               reduce using rule 15 (RelOp -> GE .)


state 17

    (7) AddOp -> + .

    +               reduce using rule 7 (AddOp -> + .)
    -               reduce using rule 7 (AddOp -> + .)
    INTLIT          reduce using rule 7 (AddOp -> + .)
    (               reduce using rule 7 (AddOp -> + .)


state 18

    (8) AddOp -> - .

    +               reduce using rule 8 (AddOp -> - .)
    -               reduce using rule 8 (AddOp -> - .)
    INTLIT          reduce using rule 8 (AddOp -> - .)
    (               reduce using rule 8 (AddOp -> - .)


state 19

    (6) Term -> Term MulOp . Factor
    (18) Factor -> . UnaryOp Primary
    (19) Factor -> . Primary
    (16) UnaryOp -> . +
    (17) UnaryOp -> . -
    (20) Primary -> . INTLIT
    (21) Primary -> . ( Relation )

    +               shift and go to state 7
    -               shift and go to state 8
    INTLIT          shift and go to state 9
    (               shift and go to state 10

    Factor                         shift and go to state 27
    UnaryOp                        shift and go to state 5
    Primary                        shift and go to state 6

state 20

    (9) MulOp -> * .

    +               reduce using rule 9 (MulOp -> * .)
    -               reduce using rule 9 (MulOp -> * .)
    INTLIT          reduce using rule 9 (MulOp -> * .)
    (               reduce using rule 9 (MulOp -> * .)


state 21

    (10) MulOp -> / .

    +               reduce using rule 10 (MulOp -> / .)
    -               reduce using rule 10 (MulOp -> / .)
    INTLIT          reduce using rule 10 (MulOp -> / .)
    (               reduce using rule 10 (MulOp -> / .)


state 22

    (11) MulOp -> % .

    +               reduce using rule 11 (MulOp -> % .)
    -               reduce using rule 11 (MulOp -> % .)
    INTLIT          reduce using rule 11 (MulOp -> % .)
    (               reduce using rule 11 (MulOp -> % .)


state 23

    (18) Factor -> UnaryOp Primary .

    *               reduce using rule 18 (Factor -> UnaryOp Primary .)
    /               reduce using rule 18 (Factor -> UnaryOp Primary .)
    %               reduce using rule 18 (Factor -> UnaryOp Primary .)
    <               reduce using rule 18 (Factor -> UnaryOp Primary .)
    LE              reduce using rule 18 (Factor -> UnaryOp Primary .)
    >               reduce using rule 18 (Factor -> UnaryOp Primary .)
    GE              reduce using rule 18 (Factor -> UnaryOp Primary .)
    +               reduce using rule 18 (Factor -> UnaryOp Primary .)
    -               reduce using rule 18 (Factor -> UnaryOp Primary .)
    $end            reduce using rule 18 (Factor -> UnaryOp Primary .)
    )               reduce using rule 18 (Factor -> UnaryOp Primary .)


state 24

    (21) Primary -> ( Relation . )

    )               shift and go to state 28


state 25

    (2) Relation -> Addition RelOp Addition .
    (4) Addition -> Addition . AddOp Term
    (7) AddOp -> . +
    (8) AddOp -> . -

    $end            reduce using rule 2 (Relation -> Addition RelOp Addition .)
    )               reduce using rule 2 (Relation -> Addition RelOp Addition .)
    +               shift and go to state 17
    -               shift and go to state 18

    AddOp                          shift and go to state 12

state 26

    (4) Addition -> Addition AddOp Term .
    (6) Term -> Term . MulOp Factor
    (9) MulOp -> . *
    (10) MulOp -> . /
    (11) MulOp -> . %

    <               reduce using rule 4 (Addition -> Addition AddOp Term .)
    LE              reduce using rule 4 (Addition -> Addition AddOp Term .)
    >               reduce using rule 4 (Addition -> Addition AddOp Term .)
    GE              reduce using rule 4 (Addition -> Addition AddOp Term .)
    +               reduce using rule 4 (Addition -> Addition AddOp Term .)
    -               reduce using rule 4 (Addition -> Addition AddOp Term .)
    $end            reduce using rule 4 (Addition -> Addition AddOp Term .)
    )               reduce using rule 4 (Addition -> Addition AddOp Term .)
    *               shift and go to state 20
    /               shift and go to state 21
    %               shift and go to state 22

    MulOp                          shift and go to state 19

state 27

    (6) Term -> Term MulOp Factor .

    *               reduce using rule 6 (Term -> Term MulOp Factor .)
    /               reduce using rule 6 (Term -> Term MulOp Factor .)
    %               reduce using rule 6 (Term -> Term MulOp Factor .)
    <               reduce using rule 6 (Term -> Term MulOp Factor .)
    LE              reduce using rule 6 (Term -> Term MulOp Factor .)
    >               reduce using rule 6 (Term -> Term MulOp Factor .)
    GE              reduce using rule 6 (Term -> Term MulOp Factor .)
    +               reduce using rule 6 (Term -> Term MulOp Factor .)
    -               reduce using rule 6 (Term -> Term MulOp Factor .)
    $end            reduce using rule 6 (Term -> Term MulOp Factor .)
    )               reduce using rule 6 (Term -> Term MulOp Factor .)


state 28

    (21) Primary -> ( Relation ) .

    *               reduce using rule 21 (Primary -> ( Relation ) .)
    /               reduce using rule 21 (Primary -> ( Relation ) .)
    %               reduce using rule 21 (Primary -> ( Relation ) .)
    <               reduce using rule 21 (Primary -> ( Relation ) .)
    LE              reduce using rule 21 (Primary -> ( Relation ) .)
    >               reduce using rule 21 (Primary -> ( Relation ) .)
    GE              reduce using rule 21 (Primary -> ( Relation ) .)
    +               reduce using rule 21 (Primary -> ( Relation ) .)
    -               reduce using rule 21 (Primary -> ( Relation ) .)
    $end            reduce using rule 21 (Primary -> ( Relation ) .)
    )               reduce using rule 21 (Primary -> ( Relation ) .)

