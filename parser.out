Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ID

Grammar

Rule 0     S' -> Expression
Rule 1     Expression -> Conjunction
Rule 2     Expression -> Expression OR Conjunction
Rule 3     Conjunction -> Equality
Rule 4     Conjunction -> Conjunction AND Equality
Rule 5     Equality -> Relation
Rule 6     Equality -> Relation EquOp Relation
Rule 7     EquOp -> EQ
Rule 8     EquOp -> NEQ
Rule 9     Relation -> Addition
Rule 10    Relation -> Addition RelOp Addition
Rule 11    RelOp -> <
Rule 12    RelOp -> LE
Rule 13    RelOp -> >
Rule 14    RelOp -> GE
Rule 15    Addition -> Term
Rule 16    Addition -> Addition AddOp Term
Rule 17    AddOp -> +
Rule 18    AddOp -> -
Rule 19    Term -> Factor
Rule 20    Term -> Term MulOp Factor
Rule 21    MulOp -> *
Rule 22    MulOp -> /
Rule 23    MulOp -> %
Rule 24    Factor -> UnaryOp Primary
Rule 25    Factor -> Primary
Rule 26    UnaryOp -> -
Rule 27    UnaryOp -> !
Rule 28    Primary -> INTLIT
Rule 29    Primary -> ( Expression )

Terminals, with rules where they appear

!                    : 27
%                    : 23
(                    : 29
)                    : 29
*                    : 21
+                    : 17
-                    : 18 26
/                    : 22
<                    : 11
>                    : 13
AND                  : 4
EQ                   : 7
GE                   : 14
ID                   : 
INTLIT               : 28
LE                   : 12
NEQ                  : 8
OR                   : 2
error                : 

Nonterminals, with rules where they appear

AddOp                : 16
Addition             : 9 10 10 16
Conjunction          : 1 2 4
EquOp                : 6
Equality             : 3 4
Expression           : 2 29 0
Factor               : 19 20
MulOp                : 20
Primary              : 24 25
RelOp                : 10
Relation             : 5 6 6
Term                 : 15 16 20
UnaryOp              : 24

Parsing method: LALR

state 0

    (0) S' -> . Expression
    (1) Expression -> . Conjunction
    (2) Expression -> . Expression OR Conjunction
    (3) Conjunction -> . Equality
    (4) Conjunction -> . Conjunction AND Equality
    (5) Equality -> . Relation
    (6) Equality -> . Relation EquOp Relation
    (9) Relation -> . Addition
    (10) Relation -> . Addition RelOp Addition
    (15) Addition -> . Term
    (16) Addition -> . Addition AddOp Term
    (19) Term -> . Factor
    (20) Term -> . Term MulOp Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Expression                     shift and go to state 1
    Conjunction                    shift and go to state 2
    Equality                       shift and go to state 3
    Relation                       shift and go to state 4
    Addition                       shift and go to state 5
    Term                           shift and go to state 6
    Factor                         shift and go to state 7
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 1

    (0) S' -> Expression .
    (2) Expression -> Expression . OR Conjunction

    OR              shift and go to state 14


state 2

    (1) Expression -> Conjunction .
    (4) Conjunction -> Conjunction . AND Equality

    OR              reduce using rule 1 (Expression -> Conjunction .)
    $end            reduce using rule 1 (Expression -> Conjunction .)
    )               reduce using rule 1 (Expression -> Conjunction .)
    AND             shift and go to state 15


state 3

    (3) Conjunction -> Equality .

    AND             reduce using rule 3 (Conjunction -> Equality .)
    OR              reduce using rule 3 (Conjunction -> Equality .)
    $end            reduce using rule 3 (Conjunction -> Equality .)
    )               reduce using rule 3 (Conjunction -> Equality .)


state 4

    (5) Equality -> Relation .
    (6) Equality -> Relation . EquOp Relation
    (7) EquOp -> . EQ
    (8) EquOp -> . NEQ

    AND             reduce using rule 5 (Equality -> Relation .)
    OR              reduce using rule 5 (Equality -> Relation .)
    $end            reduce using rule 5 (Equality -> Relation .)
    )               reduce using rule 5 (Equality -> Relation .)
    EQ              shift and go to state 17
    NEQ             shift and go to state 18

    EquOp                          shift and go to state 16

state 5

    (9) Relation -> Addition .
    (10) Relation -> Addition . RelOp Addition
    (16) Addition -> Addition . AddOp Term
    (11) RelOp -> . <
    (12) RelOp -> . LE
    (13) RelOp -> . >
    (14) RelOp -> . GE
    (17) AddOp -> . +
    (18) AddOp -> . -

    EQ              reduce using rule 9 (Relation -> Addition .)
    NEQ             reduce using rule 9 (Relation -> Addition .)
    AND             reduce using rule 9 (Relation -> Addition .)
    OR              reduce using rule 9 (Relation -> Addition .)
    $end            reduce using rule 9 (Relation -> Addition .)
    )               reduce using rule 9 (Relation -> Addition .)
    <               shift and go to state 21
    LE              shift and go to state 22
    >               shift and go to state 23
    GE              shift and go to state 24
    +               shift and go to state 25
    -               shift and go to state 26

    RelOp                          shift and go to state 19
    AddOp                          shift and go to state 20

state 6

    (15) Addition -> Term .
    (20) Term -> Term . MulOp Factor
    (21) MulOp -> . *
    (22) MulOp -> . /
    (23) MulOp -> . %

    <               reduce using rule 15 (Addition -> Term .)
    LE              reduce using rule 15 (Addition -> Term .)
    >               reduce using rule 15 (Addition -> Term .)
    GE              reduce using rule 15 (Addition -> Term .)
    +               reduce using rule 15 (Addition -> Term .)
    -               reduce using rule 15 (Addition -> Term .)
    EQ              reduce using rule 15 (Addition -> Term .)
    NEQ             reduce using rule 15 (Addition -> Term .)
    AND             reduce using rule 15 (Addition -> Term .)
    OR              reduce using rule 15 (Addition -> Term .)
    $end            reduce using rule 15 (Addition -> Term .)
    )               reduce using rule 15 (Addition -> Term .)
    *               shift and go to state 28
    /               shift and go to state 29
    %               shift and go to state 30

    MulOp                          shift and go to state 27

state 7

    (19) Term -> Factor .

    *               reduce using rule 19 (Term -> Factor .)
    /               reduce using rule 19 (Term -> Factor .)
    %               reduce using rule 19 (Term -> Factor .)
    <               reduce using rule 19 (Term -> Factor .)
    LE              reduce using rule 19 (Term -> Factor .)
    >               reduce using rule 19 (Term -> Factor .)
    GE              reduce using rule 19 (Term -> Factor .)
    +               reduce using rule 19 (Term -> Factor .)
    -               reduce using rule 19 (Term -> Factor .)
    EQ              reduce using rule 19 (Term -> Factor .)
    NEQ             reduce using rule 19 (Term -> Factor .)
    AND             reduce using rule 19 (Term -> Factor .)
    OR              reduce using rule 19 (Term -> Factor .)
    $end            reduce using rule 19 (Term -> Factor .)
    )               reduce using rule 19 (Term -> Factor .)


state 8

    (24) Factor -> UnaryOp . Primary
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Primary                        shift and go to state 31

state 9

    (25) Factor -> Primary .

    *               reduce using rule 25 (Factor -> Primary .)
    /               reduce using rule 25 (Factor -> Primary .)
    %               reduce using rule 25 (Factor -> Primary .)
    <               reduce using rule 25 (Factor -> Primary .)
    LE              reduce using rule 25 (Factor -> Primary .)
    >               reduce using rule 25 (Factor -> Primary .)
    GE              reduce using rule 25 (Factor -> Primary .)
    +               reduce using rule 25 (Factor -> Primary .)
    -               reduce using rule 25 (Factor -> Primary .)
    EQ              reduce using rule 25 (Factor -> Primary .)
    NEQ             reduce using rule 25 (Factor -> Primary .)
    AND             reduce using rule 25 (Factor -> Primary .)
    OR              reduce using rule 25 (Factor -> Primary .)
    $end            reduce using rule 25 (Factor -> Primary .)
    )               reduce using rule 25 (Factor -> Primary .)


state 10

    (26) UnaryOp -> - .

    INTLIT          reduce using rule 26 (UnaryOp -> - .)
    (               reduce using rule 26 (UnaryOp -> - .)


state 11

    (27) UnaryOp -> ! .

    INTLIT          reduce using rule 27 (UnaryOp -> ! .)
    (               reduce using rule 27 (UnaryOp -> ! .)


state 12

    (28) Primary -> INTLIT .

    *               reduce using rule 28 (Primary -> INTLIT .)
    /               reduce using rule 28 (Primary -> INTLIT .)
    %               reduce using rule 28 (Primary -> INTLIT .)
    <               reduce using rule 28 (Primary -> INTLIT .)
    LE              reduce using rule 28 (Primary -> INTLIT .)
    >               reduce using rule 28 (Primary -> INTLIT .)
    GE              reduce using rule 28 (Primary -> INTLIT .)
    +               reduce using rule 28 (Primary -> INTLIT .)
    -               reduce using rule 28 (Primary -> INTLIT .)
    EQ              reduce using rule 28 (Primary -> INTLIT .)
    NEQ             reduce using rule 28 (Primary -> INTLIT .)
    AND             reduce using rule 28 (Primary -> INTLIT .)
    OR              reduce using rule 28 (Primary -> INTLIT .)
    $end            reduce using rule 28 (Primary -> INTLIT .)
    )               reduce using rule 28 (Primary -> INTLIT .)


state 13

    (29) Primary -> ( . Expression )
    (1) Expression -> . Conjunction
    (2) Expression -> . Expression OR Conjunction
    (3) Conjunction -> . Equality
    (4) Conjunction -> . Conjunction AND Equality
    (5) Equality -> . Relation
    (6) Equality -> . Relation EquOp Relation
    (9) Relation -> . Addition
    (10) Relation -> . Addition RelOp Addition
    (15) Addition -> . Term
    (16) Addition -> . Addition AddOp Term
    (19) Term -> . Factor
    (20) Term -> . Term MulOp Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Expression                     shift and go to state 32
    Conjunction                    shift and go to state 2
    Equality                       shift and go to state 3
    Relation                       shift and go to state 4
    Addition                       shift and go to state 5
    Term                           shift and go to state 6
    Factor                         shift and go to state 7
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 14

    (2) Expression -> Expression OR . Conjunction
    (3) Conjunction -> . Equality
    (4) Conjunction -> . Conjunction AND Equality
    (5) Equality -> . Relation
    (6) Equality -> . Relation EquOp Relation
    (9) Relation -> . Addition
    (10) Relation -> . Addition RelOp Addition
    (15) Addition -> . Term
    (16) Addition -> . Addition AddOp Term
    (19) Term -> . Factor
    (20) Term -> . Term MulOp Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Conjunction                    shift and go to state 33
    Equality                       shift and go to state 3
    Relation                       shift and go to state 4
    Addition                       shift and go to state 5
    Term                           shift and go to state 6
    Factor                         shift and go to state 7
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 15

    (4) Conjunction -> Conjunction AND . Equality
    (5) Equality -> . Relation
    (6) Equality -> . Relation EquOp Relation
    (9) Relation -> . Addition
    (10) Relation -> . Addition RelOp Addition
    (15) Addition -> . Term
    (16) Addition -> . Addition AddOp Term
    (19) Term -> . Factor
    (20) Term -> . Term MulOp Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Equality                       shift and go to state 34
    Relation                       shift and go to state 4
    Addition                       shift and go to state 5
    Term                           shift and go to state 6
    Factor                         shift and go to state 7
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 16

    (6) Equality -> Relation EquOp . Relation
    (9) Relation -> . Addition
    (10) Relation -> . Addition RelOp Addition
    (15) Addition -> . Term
    (16) Addition -> . Addition AddOp Term
    (19) Term -> . Factor
    (20) Term -> . Term MulOp Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Relation                       shift and go to state 35
    Addition                       shift and go to state 5
    Term                           shift and go to state 6
    Factor                         shift and go to state 7
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 17

    (7) EquOp -> EQ .

    -               reduce using rule 7 (EquOp -> EQ .)
    !               reduce using rule 7 (EquOp -> EQ .)
    INTLIT          reduce using rule 7 (EquOp -> EQ .)
    (               reduce using rule 7 (EquOp -> EQ .)


state 18

    (8) EquOp -> NEQ .

    -               reduce using rule 8 (EquOp -> NEQ .)
    !               reduce using rule 8 (EquOp -> NEQ .)
    INTLIT          reduce using rule 8 (EquOp -> NEQ .)
    (               reduce using rule 8 (EquOp -> NEQ .)


state 19

    (10) Relation -> Addition RelOp . Addition
    (15) Addition -> . Term
    (16) Addition -> . Addition AddOp Term
    (19) Term -> . Factor
    (20) Term -> . Term MulOp Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Addition                       shift and go to state 36
    Term                           shift and go to state 6
    Factor                         shift and go to state 7
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 20

    (16) Addition -> Addition AddOp . Term
    (19) Term -> . Factor
    (20) Term -> . Term MulOp Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Term                           shift and go to state 37
    Factor                         shift and go to state 7
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 21

    (11) RelOp -> < .

    -               reduce using rule 11 (RelOp -> < .)
    !               reduce using rule 11 (RelOp -> < .)
    INTLIT          reduce using rule 11 (RelOp -> < .)
    (               reduce using rule 11 (RelOp -> < .)


state 22

    (12) RelOp -> LE .

    -               reduce using rule 12 (RelOp -> LE .)
    !               reduce using rule 12 (RelOp -> LE .)
    INTLIT          reduce using rule 12 (RelOp -> LE .)
    (               reduce using rule 12 (RelOp -> LE .)


state 23

    (13) RelOp -> > .

    -               reduce using rule 13 (RelOp -> > .)
    !               reduce using rule 13 (RelOp -> > .)
    INTLIT          reduce using rule 13 (RelOp -> > .)
    (               reduce using rule 13 (RelOp -> > .)


state 24

    (14) RelOp -> GE .

    -               reduce using rule 14 (RelOp -> GE .)
    !               reduce using rule 14 (RelOp -> GE .)
    INTLIT          reduce using rule 14 (RelOp -> GE .)
    (               reduce using rule 14 (RelOp -> GE .)


state 25

    (17) AddOp -> + .

    -               reduce using rule 17 (AddOp -> + .)
    !               reduce using rule 17 (AddOp -> + .)
    INTLIT          reduce using rule 17 (AddOp -> + .)
    (               reduce using rule 17 (AddOp -> + .)


state 26

    (18) AddOp -> - .

    -               reduce using rule 18 (AddOp -> - .)
    !               reduce using rule 18 (AddOp -> - .)
    INTLIT          reduce using rule 18 (AddOp -> - .)
    (               reduce using rule 18 (AddOp -> - .)


state 27

    (20) Term -> Term MulOp . Factor
    (24) Factor -> . UnaryOp Primary
    (25) Factor -> . Primary
    (26) UnaryOp -> . -
    (27) UnaryOp -> . !
    (28) Primary -> . INTLIT
    (29) Primary -> . ( Expression )

    -               shift and go to state 10
    !               shift and go to state 11
    INTLIT          shift and go to state 12
    (               shift and go to state 13

    Factor                         shift and go to state 38
    UnaryOp                        shift and go to state 8
    Primary                        shift and go to state 9

state 28

    (21) MulOp -> * .

    -               reduce using rule 21 (MulOp -> * .)
    !               reduce using rule 21 (MulOp -> * .)
    INTLIT          reduce using rule 21 (MulOp -> * .)
    (               reduce using rule 21 (MulOp -> * .)


state 29

    (22) MulOp -> / .

    -               reduce using rule 22 (MulOp -> / .)
    !               reduce using rule 22 (MulOp -> / .)
    INTLIT          reduce using rule 22 (MulOp -> / .)
    (               reduce using rule 22 (MulOp -> / .)


state 30

    (23) MulOp -> % .

    -               reduce using rule 23 (MulOp -> % .)
    !               reduce using rule 23 (MulOp -> % .)
    INTLIT          reduce using rule 23 (MulOp -> % .)
    (               reduce using rule 23 (MulOp -> % .)


state 31

    (24) Factor -> UnaryOp Primary .

    *               reduce using rule 24 (Factor -> UnaryOp Primary .)
    /               reduce using rule 24 (Factor -> UnaryOp Primary .)
    %               reduce using rule 24 (Factor -> UnaryOp Primary .)
    <               reduce using rule 24 (Factor -> UnaryOp Primary .)
    LE              reduce using rule 24 (Factor -> UnaryOp Primary .)
    >               reduce using rule 24 (Factor -> UnaryOp Primary .)
    GE              reduce using rule 24 (Factor -> UnaryOp Primary .)
    +               reduce using rule 24 (Factor -> UnaryOp Primary .)
    -               reduce using rule 24 (Factor -> UnaryOp Primary .)
    EQ              reduce using rule 24 (Factor -> UnaryOp Primary .)
    NEQ             reduce using rule 24 (Factor -> UnaryOp Primary .)
    AND             reduce using rule 24 (Factor -> UnaryOp Primary .)
    OR              reduce using rule 24 (Factor -> UnaryOp Primary .)
    $end            reduce using rule 24 (Factor -> UnaryOp Primary .)
    )               reduce using rule 24 (Factor -> UnaryOp Primary .)


state 32

    (29) Primary -> ( Expression . )
    (2) Expression -> Expression . OR Conjunction

    )               shift and go to state 39
    OR              shift and go to state 14


state 33

    (2) Expression -> Expression OR Conjunction .
    (4) Conjunction -> Conjunction . AND Equality

    OR              reduce using rule 2 (Expression -> Expression OR Conjunction .)
    $end            reduce using rule 2 (Expression -> Expression OR Conjunction .)
    )               reduce using rule 2 (Expression -> Expression OR Conjunction .)
    AND             shift and go to state 15


state 34

    (4) Conjunction -> Conjunction AND Equality .

    AND             reduce using rule 4 (Conjunction -> Conjunction AND Equality .)
    OR              reduce using rule 4 (Conjunction -> Conjunction AND Equality .)
    $end            reduce using rule 4 (Conjunction -> Conjunction AND Equality .)
    )               reduce using rule 4 (Conjunction -> Conjunction AND Equality .)


state 35

    (6) Equality -> Relation EquOp Relation .

    AND             reduce using rule 6 (Equality -> Relation EquOp Relation .)
    OR              reduce using rule 6 (Equality -> Relation EquOp Relation .)
    $end            reduce using rule 6 (Equality -> Relation EquOp Relation .)
    )               reduce using rule 6 (Equality -> Relation EquOp Relation .)


state 36

    (10) Relation -> Addition RelOp Addition .
    (16) Addition -> Addition . AddOp Term
    (17) AddOp -> . +
    (18) AddOp -> . -

    EQ              reduce using rule 10 (Relation -> Addition RelOp Addition .)
    NEQ             reduce using rule 10 (Relation -> Addition RelOp Addition .)
    AND             reduce using rule 10 (Relation -> Addition RelOp Addition .)
    OR              reduce using rule 10 (Relation -> Addition RelOp Addition .)
    $end            reduce using rule 10 (Relation -> Addition RelOp Addition .)
    )               reduce using rule 10 (Relation -> Addition RelOp Addition .)
    +               shift and go to state 25
    -               shift and go to state 26

    AddOp                          shift and go to state 20

state 37

    (16) Addition -> Addition AddOp Term .
    (20) Term -> Term . MulOp Factor
    (21) MulOp -> . *
    (22) MulOp -> . /
    (23) MulOp -> . %

    <               reduce using rule 16 (Addition -> Addition AddOp Term .)
    LE              reduce using rule 16 (Addition -> Addition AddOp Term .)
    >               reduce using rule 16 (Addition -> Addition AddOp Term .)
    GE              reduce using rule 16 (Addition -> Addition AddOp Term .)
    +               reduce using rule 16 (Addition -> Addition AddOp Term .)
    -               reduce using rule 16 (Addition -> Addition AddOp Term .)
    EQ              reduce using rule 16 (Addition -> Addition AddOp Term .)
    NEQ             reduce using rule 16 (Addition -> Addition AddOp Term .)
    AND             reduce using rule 16 (Addition -> Addition AddOp Term .)
    OR              reduce using rule 16 (Addition -> Addition AddOp Term .)
    $end            reduce using rule 16 (Addition -> Addition AddOp Term .)
    )               reduce using rule 16 (Addition -> Addition AddOp Term .)
    *               shift and go to state 28
    /               shift and go to state 29
    %               shift and go to state 30

    MulOp                          shift and go to state 27

state 38

    (20) Term -> Term MulOp Factor .

    *               reduce using rule 20 (Term -> Term MulOp Factor .)
    /               reduce using rule 20 (Term -> Term MulOp Factor .)
    %               reduce using rule 20 (Term -> Term MulOp Factor .)
    <               reduce using rule 20 (Term -> Term MulOp Factor .)
    LE              reduce using rule 20 (Term -> Term MulOp Factor .)
    >               reduce using rule 20 (Term -> Term MulOp Factor .)
    GE              reduce using rule 20 (Term -> Term MulOp Factor .)
    +               reduce using rule 20 (Term -> Term MulOp Factor .)
    -               reduce using rule 20 (Term -> Term MulOp Factor .)
    EQ              reduce using rule 20 (Term -> Term MulOp Factor .)
    NEQ             reduce using rule 20 (Term -> Term MulOp Factor .)
    AND             reduce using rule 20 (Term -> Term MulOp Factor .)
    OR              reduce using rule 20 (Term -> Term MulOp Factor .)
    $end            reduce using rule 20 (Term -> Term MulOp Factor .)
    )               reduce using rule 20 (Term -> Term MulOp Factor .)


state 39

    (29) Primary -> ( Expression ) .

    *               reduce using rule 29 (Primary -> ( Expression ) .)
    /               reduce using rule 29 (Primary -> ( Expression ) .)
    %               reduce using rule 29 (Primary -> ( Expression ) .)
    <               reduce using rule 29 (Primary -> ( Expression ) .)
    LE              reduce using rule 29 (Primary -> ( Expression ) .)
    >               reduce using rule 29 (Primary -> ( Expression ) .)
    GE              reduce using rule 29 (Primary -> ( Expression ) .)
    +               reduce using rule 29 (Primary -> ( Expression ) .)
    -               reduce using rule 29 (Primary -> ( Expression ) .)
    EQ              reduce using rule 29 (Primary -> ( Expression ) .)
    NEQ             reduce using rule 29 (Primary -> ( Expression ) .)
    AND             reduce using rule 29 (Primary -> ( Expression ) .)
    OR              reduce using rule 29 (Primary -> ( Expression ) .)
    $end            reduce using rule 29 (Primary -> ( Expression ) .)
    )               reduce using rule 29 (Primary -> ( Expression ) .)

