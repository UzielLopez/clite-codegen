
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BOOL CHAR ELSE EQ FLOAT FLOATLIT FOR GE ID IF INT INTLIT LE NEQ OR RETURN WHILE\n    Functions : Function Functions\n              | empty\n    \n    Function : Type ID '(' ParameterList ')' '{' Declarations Statements '}'\n             | Type ID '(' ')' '{' Declarations Statements '}'\n    \n    ParameterList : Parameter\n                  | ParameterList ',' Parameter\n    \n    Parameter : Type ID\n    \n    empty :\n    \n    Declarations : Declaration Declarations\n                 | empty\n    \n    Declaration : Type ID ';'\n    \n    Type : INT\n         | BOOL\n         | FLOAT\n         | CHAR\n    \n    Statements : Statement Statements\n               | empty\n    \n    Statement : ';'\n              | Expression ';'\n              | Block\n              | Assignment\n              | IfStatement\n              | ForStatement\n              | WhileStatement\n              | ReturnStatement\n    \n    Block : '{' Statements '}'\n    \n    Assignment : ID '=' Expression ';'\n    \n    IfStatement : IF '(' Expression ')' Statement \n                | IF '(' Expression ')' Statement ELSE Statement\n    \n    ForStatement : FOR '(' ID '=' Expression ';' Expression ';' ID '=' Expression ')' Statement\n    \n    WhileStatement : WHILE '(' Expression ')' Statement\n    \n    ReturnStatement : RETURN Expression ';'\n                    | RETURN ';'\n    \n    Expression : Conjunction\n               | FunctionCallStatement\n               | Expression OR Conjunction\n    \n    FunctionCallStatement : ID '(' ArgumentsList ')'\n                          | ID '(' ')'\n    \n    ArgumentsList : Expression\n                  | ArgumentsList ',' Expression\n    \n    Conjunction : Equality\n                | Conjunction AND Equality\n    \n    Equality : Relation\n             | Relation EquOp Relation\n    \n    EquOp : EQ\n          | NEQ\n    \n    Relation : Addition\n             | Addition RelOp Addition\n    \n    RelOp : '<'\n          | LE\n          | '>'\n          | GE \n    \n    Addition : Term\n             | Addition AddOp Term\n    \n    AddOp : '+'\n          | '-'\n    \n    Term : Factor\n         | Term MulOp Factor\n    \n    MulOp : '*'\n          | '/'\n          | '%'\n    \n    Factor : Primary\n           | UnaryOp Primary\n    \n    UnaryOp : '-'\n            | '!'\n    Primary : FLOATLITPrimary : INTLITPrimary : ID\n    Primary : '(' Expression ')'\n    "
    
_lr_action_items = {'$end':([0,1,2,3,9,67,94,],[-8,0,-8,-2,-1,-4,-3,]),'INT':([0,2,11,18,19,20,24,61,67,94,],[5,5,5,5,5,5,5,-11,-4,-3,]),'BOOL':([0,2,11,18,19,20,24,61,67,94,],[6,6,6,6,6,6,6,-11,-4,-3,]),'FLOAT':([0,2,11,18,19,20,24,61,67,94,],[7,7,7,7,7,7,7,-11,-4,-3,]),'CHAR':([0,2,11,18,19,20,24,61,67,94,],[8,8,8,8,8,8,8,-11,-4,-3,]),'ID':([4,5,6,7,8,12,19,20,22,23,24,25,26,29,30,32,34,36,37,38,39,40,41,47,54,57,58,59,61,62,63,69,70,71,72,73,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,106,111,113,114,115,116,118,120,121,122,123,125,127,129,130,],[10,-12,-13,-14,-15,16,-8,-8,27,28,-8,-10,28,65,28,28,-18,-20,-21,-22,-23,-24,-25,65,93,-64,-65,-9,-11,65,65,-19,93,93,65,104,65,-33,93,-45,-46,93,93,-49,-50,-51,-52,-55,-56,93,-59,-60,-61,-26,-32,-27,65,28,65,28,-28,-31,28,65,-29,126,65,28,-30,]),'(':([10,19,20,23,24,25,26,28,29,30,32,34,36,37,38,39,40,41,44,45,46,47,54,57,58,59,61,62,63,65,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,106,111,113,114,115,116,118,120,121,122,123,127,129,130,],[11,-8,-8,29,-8,-10,29,63,29,29,29,-18,-20,-21,-22,-23,-24,-25,72,73,74,29,29,-64,-65,-9,-11,29,29,63,-19,29,29,29,29,-33,29,-45,-46,29,29,-49,-50,-51,-52,-55,-56,29,-59,-60,-61,-26,-32,-27,29,29,29,29,-28,-31,29,29,-29,29,29,-30,]),')':([11,13,15,16,21,42,43,48,49,50,51,52,53,55,56,63,64,65,92,93,96,97,98,99,101,102,103,105,107,108,109,110,112,117,128,],[14,17,-5,-7,-6,-34,-35,-41,-43,-47,-53,-57,-62,-66,-67,97,99,-68,-63,-68,112,-38,-39,-69,-36,-42,114,116,-44,-48,-54,-58,-37,-40,129,]),',':([13,15,16,21,42,43,48,49,50,51,52,53,55,56,65,92,93,96,97,98,99,101,102,107,108,109,110,112,117,],[18,-5,-7,-6,-34,-35,-41,-43,-47,-53,-57,-62,-66,-67,-68,-63,-68,113,-38,-39,-69,-36,-42,-44,-48,-54,-58,-37,-40,]),'{':([14,17,19,20,23,24,25,26,30,32,34,36,37,38,39,40,41,59,61,69,76,100,106,111,114,116,118,120,121,123,129,130,],[19,20,-8,-8,30,-8,-10,30,30,30,-18,-20,-21,-22,-23,-24,-25,-9,-11,-19,-33,-26,-32,-27,30,30,-28,-31,30,-29,30,-30,]),';':([19,20,23,24,25,26,27,28,30,32,34,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,55,56,59,61,65,69,75,76,92,93,95,97,99,100,101,102,106,107,108,109,110,111,112,114,116,118,119,120,121,123,124,129,130,],[-8,-8,34,-8,-10,34,61,-68,34,34,-18,69,-20,-21,-22,-23,-24,-25,-34,-35,76,-41,-43,-47,-53,-57,-62,-66,-67,-9,-11,-68,-19,106,-33,-63,-68,111,-38,-69,-26,-36,-42,-32,-44,-48,-54,-58,-27,-37,34,34,-28,122,-31,34,-29,125,34,-30,]),'IF':([19,20,23,24,25,26,30,32,34,36,37,38,39,40,41,59,61,69,76,100,106,111,114,116,118,120,121,123,129,130,],[-8,-8,44,-8,-10,44,44,44,-18,-20,-21,-22,-23,-24,-25,-9,-11,-19,-33,-26,-32,-27,44,44,-28,-31,44,-29,44,-30,]),'FOR':([19,20,23,24,25,26,30,32,34,36,37,38,39,40,41,59,61,69,76,100,106,111,114,116,118,120,121,123,129,130,],[-8,-8,45,-8,-10,45,45,45,-18,-20,-21,-22,-23,-24,-25,-9,-11,-19,-33,-26,-32,-27,45,45,-28,-31,45,-29,45,-30,]),'WHILE':([19,20,23,24,25,26,30,32,34,36,37,38,39,40,41,59,61,69,76,100,106,111,114,116,118,120,121,123,129,130,],[-8,-8,46,-8,-10,46,46,46,-18,-20,-21,-22,-23,-24,-25,-9,-11,-19,-33,-26,-32,-27,46,46,-28,-31,46,-29,46,-30,]),'RETURN':([19,20,23,24,25,26,30,32,34,36,37,38,39,40,41,59,61,69,76,100,106,111,114,116,118,120,121,123,129,130,],[-8,-8,47,-8,-10,47,47,47,-18,-20,-21,-22,-23,-24,-25,-9,-11,-19,-33,-26,-32,-27,47,47,-28,-31,47,-29,47,-30,]),'FLOATLIT':([19,20,23,24,25,26,29,30,32,34,36,37,38,39,40,41,47,54,57,58,59,61,62,63,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,106,111,113,114,115,116,118,120,121,122,123,127,129,130,],[-8,-8,55,-8,-10,55,55,55,55,-18,-20,-21,-22,-23,-24,-25,55,55,-64,-65,-9,-11,55,55,-19,55,55,55,55,-33,55,-45,-46,55,55,-49,-50,-51,-52,-55,-56,55,-59,-60,-61,-26,-32,-27,55,55,55,55,-28,-31,55,55,-29,55,55,-30,]),'INTLIT':([19,20,23,24,25,26,29,30,32,34,36,37,38,39,40,41,47,54,57,58,59,61,62,63,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,106,111,113,114,115,116,118,120,121,122,123,127,129,130,],[-8,-8,56,-8,-10,56,56,56,56,-18,-20,-21,-22,-23,-24,-25,56,56,-64,-65,-9,-11,56,56,-19,56,56,56,56,-33,56,-45,-46,56,56,-49,-50,-51,-52,-55,-56,56,-59,-60,-61,-26,-32,-27,56,56,56,56,-28,-31,56,56,-29,56,56,-30,]),'-':([19,20,23,24,25,26,28,29,30,32,34,36,37,38,39,40,41,47,50,51,52,53,55,56,59,61,62,63,65,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,100,106,108,109,110,111,113,114,115,116,118,120,121,122,123,127,129,130,],[-8,-8,57,-8,-10,57,-68,57,57,57,-18,-20,-21,-22,-23,-24,-25,57,87,-53,-57,-62,-66,-67,-9,-11,57,57,-68,-19,57,57,57,57,-33,57,-45,-46,57,57,-49,-50,-51,-52,-55,-56,57,-59,-60,-61,-63,-68,-69,-26,-32,87,-54,-58,-27,57,57,57,57,-28,-31,57,57,-29,57,57,-30,]),'!':([19,20,23,24,25,26,29,30,32,34,36,37,38,39,40,41,47,59,61,62,63,69,70,71,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,100,106,111,113,114,115,116,118,120,121,122,123,127,129,130,],[-8,-8,58,-8,-10,58,58,58,58,-18,-20,-21,-22,-23,-24,-25,58,-9,-11,58,58,-19,58,58,58,58,-33,58,-45,-46,58,58,-49,-50,-51,-52,-55,-56,58,-59,-60,-61,-26,-32,-27,58,58,58,58,-28,-31,58,58,-29,58,58,-30,]),'}':([19,20,23,24,25,26,30,31,32,33,34,36,37,38,39,40,41,59,60,61,66,68,69,76,100,106,111,118,120,123,130,],[-8,-8,-8,-8,-10,-8,-8,67,-8,-17,-18,-20,-21,-22,-23,-24,-25,-9,94,-11,100,-16,-19,-33,-26,-32,-27,-28,-31,-29,-30,]),'=':([28,104,126,],[62,115,127,]),'*':([28,51,52,53,55,56,65,92,93,99,109,110,],[-68,89,-57,-62,-66,-67,-68,-63,-68,-69,89,-58,]),'/':([28,51,52,53,55,56,65,92,93,99,109,110,],[-68,90,-57,-62,-66,-67,-68,-63,-68,-69,90,-58,]),'%':([28,51,52,53,55,56,65,92,93,99,109,110,],[-68,91,-57,-62,-66,-67,-68,-63,-68,-69,91,-58,]),'<':([28,50,51,52,53,55,56,65,92,93,99,109,110,],[-68,82,-53,-57,-62,-66,-67,-68,-63,-68,-69,-54,-58,]),'LE':([28,50,51,52,53,55,56,65,92,93,99,109,110,],[-68,83,-53,-57,-62,-66,-67,-68,-63,-68,-69,-54,-58,]),'>':([28,50,51,52,53,55,56,65,92,93,99,109,110,],[-68,84,-53,-57,-62,-66,-67,-68,-63,-68,-69,-54,-58,]),'GE':([28,50,51,52,53,55,56,65,92,93,99,109,110,],[-68,85,-53,-57,-62,-66,-67,-68,-63,-68,-69,-54,-58,]),'+':([28,50,51,52,53,55,56,65,92,93,99,108,109,110,],[-68,86,-53,-57,-62,-66,-67,-68,-63,-68,-69,86,-54,-58,]),'EQ':([28,49,50,51,52,53,55,56,65,92,93,99,108,109,110,],[-68,78,-47,-53,-57,-62,-66,-67,-68,-63,-68,-69,-48,-54,-58,]),'NEQ':([28,49,50,51,52,53,55,56,65,92,93,99,108,109,110,],[-68,79,-47,-53,-57,-62,-66,-67,-68,-63,-68,-69,-48,-54,-58,]),'AND':([28,42,48,49,50,51,52,53,55,56,65,92,93,99,101,102,107,108,109,110,],[-68,71,-41,-43,-47,-53,-57,-62,-66,-67,-68,-63,-68,-69,71,-42,-44,-48,-54,-58,]),'OR':([28,35,42,43,48,49,50,51,52,53,55,56,64,65,75,92,93,95,97,98,99,101,102,103,105,107,108,109,110,112,117,119,124,128,],[-68,70,-34,-35,-41,-43,-47,-53,-57,-62,-66,-67,70,-68,70,-63,-68,70,-38,70,-69,-36,-42,70,70,-44,-48,-54,-58,-37,70,70,70,70,]),'ELSE':([34,36,37,38,39,40,41,69,76,100,106,111,118,120,123,130,],[-18,-20,-21,-22,-23,-24,-25,-19,-33,-26,-32,-27,121,-31,-29,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Functions':([0,2,],[1,9,]),'Function':([0,2,],[2,2,]),'empty':([0,2,19,20,23,24,26,30,32,],[3,3,25,25,33,25,33,33,33,]),'Type':([0,2,11,18,19,20,24,],[4,4,12,12,22,22,22,]),'ParameterList':([11,],[13,]),'Parameter':([11,18,],[15,21,]),'Declarations':([19,20,24,],[23,26,59,]),'Declaration':([19,20,24,],[24,24,24,]),'Statements':([23,26,30,32,],[31,60,66,68,]),'Statement':([23,26,30,32,114,116,121,129,],[32,32,32,32,118,120,123,130,]),'Expression':([23,26,29,30,32,47,62,63,72,74,113,114,115,116,121,122,127,129,],[35,35,64,35,35,75,95,98,103,105,117,35,119,35,35,124,128,35,]),'Block':([23,26,30,32,114,116,121,129,],[36,36,36,36,36,36,36,36,]),'Assignment':([23,26,30,32,114,116,121,129,],[37,37,37,37,37,37,37,37,]),'IfStatement':([23,26,30,32,114,116,121,129,],[38,38,38,38,38,38,38,38,]),'ForStatement':([23,26,30,32,114,116,121,129,],[39,39,39,39,39,39,39,39,]),'WhileStatement':([23,26,30,32,114,116,121,129,],[40,40,40,40,40,40,40,40,]),'ReturnStatement':([23,26,30,32,114,116,121,129,],[41,41,41,41,41,41,41,41,]),'Conjunction':([23,26,29,30,32,47,62,63,70,72,74,113,114,115,116,121,122,127,129,],[42,42,42,42,42,42,42,42,101,42,42,42,42,42,42,42,42,42,42,]),'FunctionCallStatement':([23,26,29,30,32,47,62,63,72,74,113,114,115,116,121,122,127,129,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'Equality':([23,26,29,30,32,47,62,63,70,71,72,74,113,114,115,116,121,122,127,129,],[48,48,48,48,48,48,48,48,48,102,48,48,48,48,48,48,48,48,48,48,]),'Relation':([23,26,29,30,32,47,62,63,70,71,72,74,77,113,114,115,116,121,122,127,129,],[49,49,49,49,49,49,49,49,49,49,49,49,107,49,49,49,49,49,49,49,49,]),'Addition':([23,26,29,30,32,47,62,63,70,71,72,74,77,80,113,114,115,116,121,122,127,129,],[50,50,50,50,50,50,50,50,50,50,50,50,50,108,50,50,50,50,50,50,50,50,]),'Term':([23,26,29,30,32,47,62,63,70,71,72,74,77,80,81,113,114,115,116,121,122,127,129,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,109,51,51,51,51,51,51,51,51,]),'Factor':([23,26,29,30,32,47,62,63,70,71,72,74,77,80,81,88,113,114,115,116,121,122,127,129,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,110,52,52,52,52,52,52,52,52,]),'Primary':([23,26,29,30,32,47,54,62,63,70,71,72,74,77,80,81,88,113,114,115,116,121,122,127,129,],[53,53,53,53,53,53,92,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'UnaryOp':([23,26,29,30,32,47,62,63,70,71,72,74,77,80,81,88,113,114,115,116,121,122,127,129,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'EquOp':([49,],[77,]),'RelOp':([50,],[80,]),'AddOp':([50,108,],[81,81,]),'MulOp':([51,109,],[88,88,]),'ArgumentsList':([63,],[96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Functions","S'",1,None,None,None),
  ('Functions -> Function Functions','Functions',2,'p_Functions','analisis.py',60),
  ('Functions -> empty','Functions',1,'p_Functions','analisis.py',61),
  ('Function -> Type ID ( ParameterList ) { Declarations Statements }','Function',9,'p_Function','analisis.py',68),
  ('Function -> Type ID ( ) { Declarations Statements }','Function',8,'p_Function','analisis.py',69),
  ('ParameterList -> Parameter','ParameterList',1,'p_ParameterList','analisis.py',78),
  ('ParameterList -> ParameterList , Parameter','ParameterList',3,'p_ParameterList','analisis.py',79),
  ('Parameter -> Type ID','Parameter',2,'p_Parameter','analisis.py',89),
  ('empty -> <empty>','empty',0,'p_empty','analisis.py',102),
  ('Declarations -> Declaration Declarations','Declarations',2,'p_Declarations','analisis.py',108),
  ('Declarations -> empty','Declarations',1,'p_Declarations','analisis.py',109),
  ('Declaration -> Type ID ;','Declaration',3,'p_Declaration','analisis.py',116),
  ('Type -> INT','Type',1,'p_Type','analisis.py',122),
  ('Type -> BOOL','Type',1,'p_Type','analisis.py',123),
  ('Type -> FLOAT','Type',1,'p_Type','analisis.py',124),
  ('Type -> CHAR','Type',1,'p_Type','analisis.py',125),
  ('Statements -> Statement Statements','Statements',2,'p_Statements','analisis.py',131),
  ('Statements -> empty','Statements',1,'p_Statements','analisis.py',132),
  ('Statement -> ;','Statement',1,'p_Statement','analisis.py',140),
  ('Statement -> Expression ;','Statement',2,'p_Statement','analisis.py',141),
  ('Statement -> Block','Statement',1,'p_Statement','analisis.py',142),
  ('Statement -> Assignment','Statement',1,'p_Statement','analisis.py',143),
  ('Statement -> IfStatement','Statement',1,'p_Statement','analisis.py',144),
  ('Statement -> ForStatement','Statement',1,'p_Statement','analisis.py',145),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','analisis.py',146),
  ('Statement -> ReturnStatement','Statement',1,'p_Statement','analisis.py',147),
  ('Block -> { Statements }','Block',3,'p_Block','analisis.py',154),
  ('Assignment -> ID = Expression ;','Assignment',4,'p_Assignment','analisis.py',160),
  ('IfStatement -> IF ( Expression ) Statement','IfStatement',5,'p_IfStatement','analisis.py',166),
  ('IfStatement -> IF ( Expression ) Statement ELSE Statement','IfStatement',7,'p_IfStatement','analisis.py',167),
  ('ForStatement -> FOR ( ID = Expression ; Expression ; ID = Expression ) Statement','ForStatement',13,'p_ForStatement','analisis.py',176),
  ('WhileStatement -> WHILE ( Expression ) Statement','WhileStatement',5,'p_WhileStatement','analisis.py',187),
  ('ReturnStatement -> RETURN Expression ;','ReturnStatement',3,'p_ReturnStatement','analisis.py',193),
  ('ReturnStatement -> RETURN ;','ReturnStatement',2,'p_ReturnStatement','analisis.py',194),
  ('Expression -> Conjunction','Expression',1,'p_Expression','analisis.py',203),
  ('Expression -> FunctionCallStatement','Expression',1,'p_Expression','analisis.py',204),
  ('Expression -> Expression OR Conjunction','Expression',3,'p_Expression','analisis.py',205),
  ('FunctionCallStatement -> ID ( ArgumentsList )','FunctionCallStatement',4,'p_FunctionCallStatement','analisis.py',214),
  ('FunctionCallStatement -> ID ( )','FunctionCallStatement',3,'p_FunctionCallStatement','analisis.py',215),
  ('ArgumentsList -> Expression','ArgumentsList',1,'p_ArgumentsList','analisis.py',224),
  ('ArgumentsList -> ArgumentsList , Expression','ArgumentsList',3,'p_ArgumentsList','analisis.py',225),
  ('Conjunction -> Equality','Conjunction',1,'p_Conjunction','analisis.py',235),
  ('Conjunction -> Conjunction AND Equality','Conjunction',3,'p_Conjunction','analisis.py',236),
  ('Equality -> Relation','Equality',1,'p_Equality','analisis.py',245),
  ('Equality -> Relation EquOp Relation','Equality',3,'p_Equality','analisis.py',246),
  ('EquOp -> EQ','EquOp',1,'p_EquOp','analisis.py',255),
  ('EquOp -> NEQ','EquOp',1,'p_EquOp','analisis.py',256),
  ('Relation -> Addition','Relation',1,'p_Relation','analisis.py',262),
  ('Relation -> Addition RelOp Addition','Relation',3,'p_Relation','analisis.py',263),
  ('RelOp -> <','RelOp',1,'p_RelOp','analisis.py',272),
  ('RelOp -> LE','RelOp',1,'p_RelOp','analisis.py',273),
  ('RelOp -> >','RelOp',1,'p_RelOp','analisis.py',274),
  ('RelOp -> GE','RelOp',1,'p_RelOp','analisis.py',275),
  ('Addition -> Term','Addition',1,'p_Addition','analisis.py',281),
  ('Addition -> Addition AddOp Term','Addition',3,'p_Addition','analisis.py',282),
  ('AddOp -> +','AddOp',1,'p_AddOp','analisis.py',292),
  ('AddOp -> -','AddOp',1,'p_AddOp','analisis.py',293),
  ('Term -> Factor','Term',1,'p_Term','analisis.py',299),
  ('Term -> Term MulOp Factor','Term',3,'p_Term','analisis.py',300),
  ('MulOp -> *','MulOp',1,'p_MulOp','analisis.py',309),
  ('MulOp -> /','MulOp',1,'p_MulOp','analisis.py',310),
  ('MulOp -> %','MulOp',1,'p_MulOp','analisis.py',311),
  ('Factor -> Primary','Factor',1,'p_Factor','analisis.py',317),
  ('Factor -> UnaryOp Primary','Factor',2,'p_Factor','analisis.py',318),
  ('UnaryOp -> -','UnaryOp',1,'p_UnaryOp','analisis.py',332),
  ('UnaryOp -> !','UnaryOp',1,'p_UnaryOp','analisis.py',333),
  ('Primary -> FLOATLIT','Primary',1,'p_Primary_FloatLit','analisis.py',338),
  ('Primary -> INTLIT','Primary',1,'p_Primary_IntLit','analisis.py',342),
  ('Primary -> ID','Primary',1,'p_Primary_Id','analisis.py',346),
  ('Primary -> ( Expression )','Primary',3,'p_Primary_Expression','analisis.py',353),
]
